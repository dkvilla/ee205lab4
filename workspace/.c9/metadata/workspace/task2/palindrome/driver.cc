{"changed":true,"filter":false,"title":"driver.cc","tooltip":"/task2/palindrome/driver.cc","value":"#include <iostream>\n#include <string>\n#include \"stack.h\"\n#include \"queue.h\"\n#include \"dequeue.h\"\n#include \"gstruct.h\"\n#include \"gstruct_it.h\"\n#include \"container.h\"\n#include \"listnode.h\"\n#include \"driver.h\"\n\nusing std::cout;\nusing std::endl;\nusing std::cin;\nusing std::string;\nusing std::getline;\nint main() {\n    Stack orig, reverse;\n    string input;\n    cout << \"give me some text: \";\n    getline(cin, input);\n    for (string::iterator sit = input.begin(); sit != input.end(); sit++)\n    {\n        if (isalnum(*sit))\n            orig.push(toupper(*sit));\n    }\n        \n    while (orig.size()>0)\n        reverse.push(orig.pop());\n        \n    for (string::iterator sit = input.begin(); sit != input.end(); sit++)\n    {\n        if (isalnum(*sit))\n            orig.push(toupper(*sit));\n    }\n    \n    cout << \"orig: \";\n    for (GstructIt git = orig.begin(); git != orig.end(); git++)\n    {\n        char temp = *git;\n        cout << temp;\n    }\n    cout << endl;\n    \n    cout << \"reverse: \";\n    for (GstructIt git = reverse.begin(); git != reverse.end(); git++)\n    {\n        char temp = *git;\n        cout << temp;\n    }\n    cout << endl;\n    \n    if (orig == reverse)\n        cout << input << \" is a palindrome\" << endl;\n    else \n        cout << input << \" is not a palindrome\" << endl;\n        \n    \n}","undoManager":{"mark":17,"position":17,"stack":[[{"start":{"row":23,"column":18},"end":{"row":23,"column":19},"action":"remove","lines":["a"],"id":959}],[{"start":{"row":23,"column":17},"end":{"row":23,"column":18},"action":"remove","lines":["h"],"id":960}],[{"start":{"row":23,"column":17},"end":{"row":23,"column":18},"action":"insert","lines":["n"],"id":961}],[{"start":{"row":23,"column":18},"end":{"row":23,"column":19},"action":"insert","lines":["u"],"id":962}],[{"start":{"row":23,"column":19},"end":{"row":23,"column":20},"action":"insert","lines":["m"],"id":963}],[{"start":{"row":23,"column":19},"end":{"row":23,"column":20},"action":"remove","lines":["m"],"id":964}],[{"start":{"row":23,"column":18},"end":{"row":23,"column":19},"action":"remove","lines":["u"],"id":965}],[{"start":{"row":23,"column":17},"end":{"row":23,"column":18},"action":"remove","lines":["n"],"id":966}],[{"start":{"row":23,"column":16},"end":{"row":23,"column":17},"action":"remove","lines":["p"],"id":967}],[{"start":{"row":23,"column":16},"end":{"row":23,"column":17},"action":"insert","lines":["n"],"id":968}],[{"start":{"row":23,"column":17},"end":{"row":23,"column":18},"action":"insert","lines":["u"],"id":969}],[{"start":{"row":23,"column":18},"end":{"row":23,"column":19},"action":"insert","lines":["m"],"id":970}],[{"start":{"row":32,"column":18},"end":{"row":32,"column":19},"action":"remove","lines":["a"],"id":971}],[{"start":{"row":32,"column":17},"end":{"row":32,"column":18},"action":"remove","lines":["h"],"id":972}],[{"start":{"row":32,"column":16},"end":{"row":32,"column":17},"action":"remove","lines":["p"],"id":973}],[{"start":{"row":32,"column":16},"end":{"row":32,"column":17},"action":"insert","lines":["n"],"id":974}],[{"start":{"row":32,"column":17},"end":{"row":32,"column":18},"action":"insert","lines":["u"],"id":975}],[{"start":{"row":32,"column":18},"end":{"row":32,"column":19},"action":"insert","lines":["m"],"id":976}],[{"start":{"row":31,"column":5},"end":{"row":32,"column":0},"action":"insert","lines":["",""],"id":977},{"start":{"row":32,"column":0},"end":{"row":32,"column":8},"action":"insert","lines":["        "]}]]},"ace":{"folds":[],"scrolltop":120,"scrollleft":0,"selection":{"start":{"row":31,"column":5},"end":{"row":31,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":7,"state":"start","mode":"ace/mode/c_cpp"}},"timestamp":1459910646000}